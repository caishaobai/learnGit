1.创建目录（mkdir）。

2.通过 git init : 把当前目录变成Git可以管理的仓库（repository）。

3.git add ：把文件添加进去，实际上就是把文件修改添加到暂存区。

4.git commit : 提交更改，实际上就是把暂存区的所有内容提交到当前分支。

-------------------------------------------------------------------
git status ：命令可以让我们时刻掌握仓库当前的状态。

git diff ：比较工作区和暂存区的区别。

git diff HEAD -- readme.txt ：可以查看工作区和版本库里面最新版本的区别。

git log ：可以告诉我们历史记录，显示从最近到最远的提交日志，以便确定要回退到哪个版本。

git reflog ：查看命令历史，以便确定要回到未来的哪个版本。

Git允许我们在版本的历史之间穿梭，使用命令git reset --hard id。
git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。

----------------------------------------------------------------------------
git rm : 
  用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。

git checkout -- readme.txt : 
意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
  一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
  一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
总之，就是让这个文件回到最近一次git commit或git add时的状态。

----------------------------------------------------------------------------
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

----------------------------------------------------------------------------
git remote add origin git@github.com:caishaobai/learngit.git :
  可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库。添加后，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的，但是origin这个名字一看就知道是远程库。

git push -u origin master :
  由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。

git push origin master :
  把本地master分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！

----------------------------------------------------------------------------
克隆一个本地库：git clone git@github.com:caishaobai/gitskills.git
